openapi: 3.0.1
info:
  title: Product API
  description: 상품 정보를 관리하는 API 입니다
  version: 0.0.1
servers:
- url: https://api.odlab.kr
tags: []
paths:
  /products:
    get:
      tags:
      - Product
      summary: 상품 목록 조회 API
      description: 상품 목록을 조회하는 API 입니다.
      operationId: "[find-product-list] "
      parameters:
      - name: query
        in: query
        description: 검색어
        required: true
        schema:
          type: string
      - name: category
        in: query
        description: "카테고리 (DIGITAL, FASHION, SPORTS, FOOD, LIFE, TOTAL)"
        required: true
        schema:
          type: string
      - name: sortType
        in: query
        description: "정렬 타입 (PRICE_ASC, PRICE_DESC, SALES_COUNT_ASC, SALES_COUNT_DESC,\
          \ REVIEW_CNT_ASC, REVIEW_CNT_DESC, REG_DATE_TIME_ASC, REG_DATE_TIME_DESC,\
          \ TOTAL_SCORE_ASC, TOTAL_SCORE_DESC)"
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: 조회 페이지 (기본값 0)
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 조회 사이즈 (기본값 10)
        required: false
        schema:
          type: string
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[find-product-list] 유효하지 않은 정렬타입 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "존재하지 않은 정렬 타입 입니다"
                      }
                    }
                '[find-product-list] 검색어 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "검색어는 필수값 입니다"
                      }
                    }
                '[find-product-list] 유효하지 않은 카테고리 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "존재하지 않은 카테고리 입니다"
                      }
                    }
                '[find-product-list] 정렬타입 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "정렬 타입은 필수값 입니다"
                      }
                    }
                '[find-product-list] 카테고리 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "카테고리는 필수값 입니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] find-product-list"
              examples:
                '[find-product-list] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "page" : 0,
                        "size" : 10,
                        "productCount" : 2,
                        "productList" : [ {
                          "id" : 10,
                          "productName" : "productName1",
                          "sellerEmail" : "sellerEmail1",
                          "productImgUrl" : "img1",
                          "price" : 50000
                        }, {
                          "id" : 12,
                          "productName" : "productName2",
                          "sellerEmail" : "sellerEmail2",
                          "productImgUrl" : "img2",
                          "price" : 50000
                        } ]
                      }
                    }
    post:
      tags:
      - Product
      summary: 상품 등록 API
      description: 상품을 등록하는 API 입니다. <br><br>1. 테스트시 우측 자물쇠를 클릭하여 유효한 인증 토큰을 입력해야
        정상 테스트가 가능합니다. (요청 헤더에 인증 토큰을 입력하여 테스트하지 않습니다) <br>2. 판매 권한을 가진 사용자만 상품을 등록할
        수 있습니다.
      operationId: "[register-product] "
      parameters:
      - name: Authorization
        in: header
        description: 인증 토큰
        required: true
        schema:
          type: string
        example: Bearer testToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/[request] register-product"
            examples:
              '[register-product] 상품 등록 권한이 없는 사용자 요청':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "DIGITAL",
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 상품 이미지 입력 사이즈 초과':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "AUTOMOTIVE",
                    "price" : 10000,
                    "quantity" : 20,
                    "productImgUrl" : "testtesttesttesttesttesttesttesttesttesttesttesttest",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 인증받지 않은 사용자 요청':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "DIGITAL",
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 상품 설명 이미지 미입력':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "AUTOMOTIVE",
                    "price" : 10000,
                    "quantity" : 20,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : null
                  }
              '[register-product] 1 미만의 상품 금액 입력':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "unknown",
                    "price" : -1,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 상품명 미입력':
                value: |-
                  {
                    "productName" : null,
                    "category" : "AUTOMOTIVE",
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 상품 이미지 미입력':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "AUTOMOTIVE",
                    "price" : 10000,
                    "quantity" : 20,
                    "productImgUrl" : null,
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 20 미만의 상품 수량 입력':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "unknown",
                    "price" : 10000,
                    "quantity" : 10,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] success':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "DIGITAL",
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 상품명 입력 사이즈 초과':
                value: |-
                  {
                    "productName" : "testtesttesttesttesttesttesttesttesttesttesttesttest",
                    "category" : "AUTOMOTIVE",
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 유효하지 않은 카테고리 입력':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "unknown",
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
              '[register-product] 상품 설명 이미지 입력 사이즈 초과':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : "AUTOMOTIVE",
                    "price" : 10000,
                    "quantity" : 20,
                    "productImgUrl" : null,
                    "descriptionImgUrl" : null
                  }
              '[register-product] 카테고리 미입력':
                value: |-
                  {
                    "productName" : "상품명",
                    "category" : null,
                    "price" : 10000,
                    "quantity" : 30,
                    "productImgUrl" : "상품 이미지",
                    "descriptionImgUrl" : "상품 설명"
                  }
      responses:
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[register-product] 상품 등록 권한이 없는 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 403,
                      "message" : "FORBIDDEN",
                      "data" : {
                        "errorCode" : 5001,
                        "errorMessage" : "접근권한이 없습니다"
                      }
                    }
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[register-product] 상품 이미지 입력 사이즈 초과':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 이미지는 50자 이하여야 합니다"
                      }
                    }
                '[register-product] 상품 설명 이미지 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 설명 이미지는 필수값 입니다"
                      }
                    }
                '[register-product] 1 미만의 상품 금액 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "금액은 필수값 입니다"
                      }
                    }
                '[register-product] 상품명 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품명은 필수값 입니다"
                      }
                    }
                '[register-product] 상품 이미지 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 이미지는 필수값 입니다"
                      }
                    }
                '[register-product] 20 미만의 상품 수량 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 수량은 20 이상이어야 합니다"
                      }
                    }
                '[register-product] 상품명 입력 사이즈 초과':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품명은 50자 이하여야 합니다"
                      }
                    }
                '[register-product] 유효하지 않은 카테고리 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "존재하지 않은 카테고리 입니다"
                      }
                    }
                '[register-product] 상품 설명 이미지 입력 사이즈 초과':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 이미지는 필수값 입니다"
                      }
                    }
                '[register-product] 카테고리 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "카테고리는 필수값 입니다"
                      }
                    }
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[register-product] 인증받지 않은 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 401,
                      "message" : "UNAUTHORIZED",
                      "data" : {
                        "errorCode" : 3001,
                        "errorMessage" : "유효한 인증 토큰이 아닙니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] register-product"
              examples:
                '[register-product] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "productId" : 12345,
                        "sellerEmail" : "od@test.com",
                        "productName" : "상품명",
                        "productImgUrl" : "상품 이미지",
                        "keywords" : [ "keyword1", "keyword2" ],
                        "descriptionImgUrl" : "상품 설명",
                        "price" : 10000,
                        "quantity" : 30,
                        "category" : "전자제품"
                      }
                    }
  /products/recommendations:
    get:
      tags:
      - Product
      summary: 추천 상품 목록 조회 API
      description: "추천 상품을 조회하는 API 입니다. <br><br>1. 최다 판매 상품, 트랜드 분석 기반 추천 상품이 조회되\
        며 인증 토큰 입력시 사용자 구매 데이터 기반 추천 상품이 추가로 조회 됩니다. <br>2. 중복된 추천 상품은 제거되어 응답 됩니다\
        . <br>3. 테스트시 우측 자물쇠를 클릭하여 유효한 인증 토큰을 입력해야 정상 테스트가 가능합니다. (요청 헤더에 인증 토큰을 입\
        력하여 테스트하지 않습니다)"
      operationId: "[find-recommend-product] "
      parameters:
      - name: searchDate
        in: query
        description: 검색 날짜 (yyyyMMdd)
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: 인증 토큰
        required: false
        schema:
          type: string
        example: Bearer testToken
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[find-recommend-product] 조회 날짜 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "검색 날짜는 필수값 입니다"
                      }
                    }
                '[find-recommend-product] 유효하지 않은 조회 날짜 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "유효하지 않은 검색 날짜 입니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] find-recommend-product"
              examples:
                '[find-recommend-product] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "personallyList" : [ {
                          "productId" : 21,
                          "productName" : "product1",
                          "sellerEmail" : "seller1",
                          "productImgUrl" : "img1",
                          "price" : 10000
                        } ],
                        "popularList" : [ {
                          "productId" : 22,
                          "productName" : "product2",
                          "sellerEmail" : "seller2",
                          "productImgUrl" : "img2",
                          "price" : 20000
                        } ],
                        "trendList" : [ {
                          "productId" : 23,
                          "productName" : "product3",
                          "sellerEmail" : "seller3",
                          "productImgUrl" : "img3",
                          "price" : 30000
                        } ]
                      }
                    }
  /products/{productId}:
    get:
      tags:
      - Product
      summary: 상품 조회 API
      description: 상품을 조회하는 API 입니다.
      operationId: "[find-product] "
      parameters:
      - name: productId
        in: path
        description: 상품 ID
        required: true
        schema:
          type: string
      responses:
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[find-product] 조회된 상품 정보 없음':
                  value: |-
                    {
                      "httpStatus" : 404,
                      "message" : "NOT_FOUND",
                      "data" : {
                        "errorCode" : 2002,
                        "errorMessage" : "조회된 상픔 정보가 없습니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] find-product"
              examples:
                '[find-product] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "productId" : 1,
                        "sellerEmail" : "test@gmail.com",
                        "productName" : "Test Product",
                        "productImgUrl" : "http://example.com/product.jpg",
                        "descriptionImgUrl" : "http://example.com/description.jpg",
                        "keywords" : [ "Keyword1", "Keyword2" ],
                        "price" : 10000,
                        "quantity" : 30,
                        "category" : "전자제품",
                        "regDateTime" : "2025-05-01 12:00:00"
                      }
                    }
    delete:
      tags:
      - Product
      summary: 상품 삭제 API
      description: 상품을 삭제하는 API 입니다. <br><br>1. 테스트시 우측 자물쇠를 클릭하여 유효한 인증 토큰을 입력해야
        정상 테스트가 가능합니다. (요청 헤더에 인증 토큰을 입력하여 테스트하지 않습니다) <br>2. 해당 상품의 판매자만 상품 삭제가 가능합니다.
      operationId: "[delete-product] "
      parameters:
      - name: productId
        in: path
        description: 상품 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: 인증 토큰
        required: true
        schema:
          type: string
        example: Bearer testToken
      responses:
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[delete-product] 권한 없는 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 403,
                      "message" : "FORBIDDEN",
                      "data" : {
                        "errorCode" : 5001,
                        "errorMessage" : "접근권한이 없습니다"
                      }
                    }
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[delete-product] 조회된 상품 없음':
                  value: |-
                    {
                      "httpStatus" : 404,
                      "message" : "NOT_FOUND",
                      "data" : {
                        "errorCode" : 2002,
                        "errorMessage" : "조회된 상픔 정보가 없습니다"
                      }
                    }
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[delete-product] 인증받지 않은 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 401,
                      "message" : "UNAUTHORIZED",
                      "data" : {
                        "errorCode" : 3001,
                        "errorMessage" : "유효한 인증 토큰이 아닙니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] delete-product"
              examples:
                '[delete-product] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "result" : true
                      }
                    }
  '/products/{productId} ':
    put:
      tags:
      - Product
      summary: 상품 수정 API
      description: 상품을 수정하는 API 입니다. <br><br>1. 테스트시 우측 자물쇠를 클릭하여 유효한 인증 토큰을 입력해야
        정상 테스트가 가능합니다. (요청 헤더에 인증 토큰을 입력하여 테스트하지 않습니다) <br>2. 해당 상품의 판매자만 상품을 수정할
        수 있습니다. <br>3. 수정이 필요한 정보만 입력해야 합니다.
      operationId: "[update-product] "
      parameters:
      - name: productId
        in: path
        description: 상품 아이디
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: 인증 토큰
        required: true
        schema:
          type: string
        example: Bearer testToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/[request] update-product"
            examples:
              '[update-product] 상품 설명 이미지 입력 사이즈 초과':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "Updated Product",
                    "productImgUrl" : "http://example.com/image.jpg",
                    "descriptionImgUrl" : "testtesttesttesttesttesttesttesttesttesttesttesttest"
                  }
              '[update-product] success':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "Updated Product",
                    "productImgUrl" : "http://example.com/image.jpg",
                    "descriptionImgUrl" : "http://example.com/description.jpg"
                  }
              '[update-product] 상품 수정 권한이 없는 사용자 요청':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "Updated Product",
                    "productImgUrl" : "http://example.com/image.jpg",
                    "descriptionImgUrl" : "http://example.com/description.jpg"
                  }
              '[update-product] 상품 이미지 입력 사이즈 초과':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "Updated Product",
                    "productImgUrl" : "testtesttesttesttesttesttesttesttesttesttesttesttest",
                    "descriptionImgUrl" : "http://example.com/description.jpg"
                  }
              '[update-product] 조회된 상품 없음':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "Updated Product",
                    "productImgUrl" : "http://example.com/image.jpg",
                    "descriptionImgUrl" : "http://example.com/description.jpg"
                  }
              '[update-product] 인증받지 않은 사용자 요청':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "Updated Product",
                    "productImgUrl" : "http://example.com/image.jpg",
                    "descriptionImgUrl" : "http://example.com/description.jpg"
                  }
              '[update-product] 상품명 입력 사이즈 초과':
                value: |-
                  {
                    "price" : 10000,
                    "productOption" : [ "Option1", "Option2" ],
                    "keywords" : [ "Keyword1", "Keyword2" ],
                    "productName" : "testtesttesttesttesttesttesttesttesttesttesttesttest",
                    "productImgUrl" : "http://example.com/image.jpg",
                    "descriptionImgUrl" : "http://example.com/description.jpg"
                  }
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[update-product] 상품 설명 이미지 입력 사이즈 초과':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 설명 이미지는 50자 이하여야 합니다"
                      }
                    }
                '[update-product] 상품 이미지 입력 사이즈 초과':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 이미지는 50자 이하여야 합니다"
                      }
                    }
                '[update-product] 상품명 입력 사이즈 초과':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품명은 50자 이하여야 합니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] update-product"
              examples:
                '[update-product] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "productId" : 1,
                        "sellerEmail" : "sellerEmail",
                        "productName" : "Updated Product",
                        "productImgUrl" : "http://example.com/image.jpg",
                        "keywords" : [ "Keyword1", "Keyword2" ],
                        "descriptionImgUrl" : "http://example.com/description.jpg",
                        "price" : 10000,
                        "category" : "전체"
                      }
                    }
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[update-product] 상품 수정 권한이 없는 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 403,
                      "message" : "FORBIDDEN",
                      "data" : {
                        "errorCode" : 5001,
                        "errorMessage" : "접근권한이 없습니다"
                      }
                    }
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[update-product] 조회된 상품 없음':
                  value: |-
                    {
                      "httpStatus" : 404,
                      "message" : "NOT_FOUND",
                      "data" : {
                        "errorCode" : 2002,
                        "errorMessage" : "조회된 상픔 정보가 없습니다"
                      }
                    }
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[update-product] 인증받지 않은 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 401,
                      "message" : "UNAUTHORIZED",
                      "data" : {
                        "errorCode" : 3001,
                        "errorMessage" : "유효한 인증 토큰이 아닙니다"
                      }
                    }
  /products/{productId}/restock:
    put:
      tags:
      - Product
      summary: 상품 수량 추가 API
      description: 상품 수량을 추가하는 API 입니다. <br><br>1. 테스트시 우측 자물쇠를 클릭하여 유효한 인증 토큰을 입력해야
        정상 테스트가 가능합니다. (요청 헤더에 인증 토큰을 입력하여 테스트하지 않습니다) <br>2. 권한을 가진 사용자만 상품 수량을 수정할
        수 있습니다.3. 상품 수량 추가는 해당 상품을 등록한 사용자만 수정 가능합니다.
      operationId: "[increase-product-quantity] "
      parameters:
      - name: productId
        in: path
        description: ""
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: 인증 토큰
        required: true
        schema:
          type: string
        example: Bearer testToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/[request] increase-product-quantity"
            examples:
              '[increase-product-quantity] 인증받지 않은 사용자 요청':
                value: |-
                  {
                    "quantity" : 10
                  }
              '[increase-product-quantity] 상품 수량 음수로 입력':
                value: |-
                  {
                    "quantity" : -1
                  }
              '[increase-product-quantity] 조회된 상품 정보 없음':
                value: |-
                  {
                    "quantity" : 20
                  }
              '[increase-product-quantity] 상품 수량 추가 권한이 없는 사용자 요청':
                value: |-
                  {
                    "quantity" : 10
                  }
              '[increase-product-quantity] success':
                value: |-
                  {
                    "quantity" : 10
                  }
      responses:
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[increase-product-quantity] 인증받지 않은 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 401,
                      "message" : "UNAUTHORIZED",
                      "data" : {
                        "errorCode" : 3001,
                        "errorMessage" : "유효한 인증 토큰이 아닙니다"
                      }
                    }
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[increase-product-quantity] 상품 수량 음수로 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "상품 수량은 1 이상 이어야 합니다"
                      }
                    }
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[increase-product-quantity] 조회된 상품 정보 없음':
                  value: |-
                    {
                      "httpStatus" : 404,
                      "message" : "NOT_FOUND",
                      "data" : {
                        "errorCode" : 2002,
                        "errorMessage" : "조회된 상픔 정보가 없습니다"
                      }
                    }
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[increase-product-quantity] 상품 수량 추가 권한이 없는 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 403,
                      "message" : "FORBIDDEN",
                      "data" : {
                        "errorCode" : 5001,
                        "errorMessage" : "접근권한이 없습니다"
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] update-product-quantity"
              examples:
                '[increase-product-quantity] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "result" : true
                      }
                    }
  /products/{productId}/reviews:
    get:
      tags:
      - Review
      summary: 리뷰 조회 API
      description: 리뷰를 조회하는 API 입니다.
      operationId: "[find-review-list] "
      parameters:
      - name: productId
        in: path
        description: 상품 ID
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: 페이지 번호 (기본값 :0)
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: "페이지당 리뷰 개수 (기본값: 10)"
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] find-review-list"
              examples:
                '[find-review-list] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "productId" : 1,
                        "page" : 0,
                        "size" : 10,
                        "reviewCount" : 2,
                        "reviews" : [ {
                          "customerEmail" : "od@gmail.com",
                          "review" : "좋아요"
                        }, {
                          "customerEmail" : "exg@gmail.com",
                          "review" : "굿굿"
                        } ]
                      }
                    }
        "404":
          description: "404"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[find-review-list] 조회된 상품 정보 없음':
                  value: |-
                    {
                      "httpStatus" : 404,
                      "message" : "NOT_FOUND",
                      "data" : {
                        "errorCode" : 2002,
                        "errorMessage" : "조회된 상픔 정보가 없습니다"
                      }
                    }
    post:
      tags:
      - Review
      summary: 리뷰 등록 API
      description: 리뷰를 등록하는 API 입니다. <br><br>1. 테스트시 우측 자물쇠를 클릭하여 유효한 인증 토큰을 입력해야
        정상 테스트가 가능합니다. (요청 헤더에 인증 토큰을 입력하여 테스트하지 않습니다) <br>2. 해당 상품을 구매한 사용자만 리뷰를
        등록할 수 있습니다.
      operationId: "[register-reviews] "
      parameters:
      - name: productId
        in: path
        description: 상품 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: 인증 토큰
        required: true
        schema:
          type: string
        example: Bearer testToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/[request] register-review"
            examples:
              '[register-reviews] 리뷰 빈 값 입력':
                value: |-
                  {
                    "review" : "",
                    "score" : 5.0
                  }
              '[register-reviews] success':
                value: |-
                  {
                    "review" : "테스트 리뷰 정보 입니다.",
                    "score" : 5.0
                  }
              '[register-reviews] 유효하지 않은 점수 입력':
                value: |-
                  {
                    "review" : "테스트 리뷰 정보 입니다.",
                    "score" : 7.0
                  }
              '[register-reviews] 상품 등록 권한이 없는 사용자 요청':
                value: |-
                  {
                    "review" : "테스트 리뷰 정보 입니다.",
                    "score" : 5.0
                  }
              '[register-reviews] 점수 미입력':
                value: |-
                  {
                    "review" : "테스트 리뷰 정보 입니다.",
                    "score" : null
                  }
              '[register-reviews] 잘못된 길이의 리뷰 입력':
                value: |-
                  {
                    "review" : "error",
                    "score" : 5.0
                  }
              '[register-reviews] 리뷰 미입력':
                value: |-
                  {
                    "review" : null,
                    "score" : 5.0
                  }
              '[register-reviews] 인증받지 않은 사용자 요청':
                value: |-
                  {
                    "review" : "테스트 리뷰 정보 입니다.",
                    "score" : 5.0
                  }
      responses:
        "400":
          description: "400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[register-reviews] 리뷰 빈 값 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "리뷰는 필수값 입니다."
                      }
                    }
                '[register-reviews] 유효하지 않은 점수 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "점수는 0.5 이상 5.0 이하여야 합니다."
                      }
                    }
                '[register-reviews] 점수 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "점수는 필수값 입니다."
                      }
                    }
                '[register-reviews] 잘못된 길이의 리뷰 입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "리뷰는 10자 이상 50자 이하여야 합니다."
                      }
                    }
                '[register-reviews] 리뷰 미입력':
                  value: |-
                    {
                      "httpStatus" : 400,
                      "message" : "BAD_REQUEST",
                      "data" : {
                        "errorCode" : 1099,
                        "errorMessage" : "리뷰는 필수값 입니다."
                      }
                    }
        "200":
          description: "200"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] register-review"
              examples:
                '[register-reviews] success':
                  value: |-
                    {
                      "httpStatus" : 200,
                      "message" : "OK",
                      "data" : {
                        "result" : true
                      }
                    }
        "403":
          description: "403"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[register-reviews] 상품 등록 권한이 없는 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 403,
                      "message" : "FORBIDDEN",
                      "data" : {
                        "errorCode" : 5001,
                        "errorMessage" : "접근권한이 없습니다"
                      }
                    }
        "401":
          description: "401"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/[response] error"
              examples:
                '[register-reviews] 인증받지 않은 사용자 요청':
                  value: |-
                    {
                      "httpStatus" : 401,
                      "message" : "UNAUTHORIZED",
                      "data" : {
                        "errorCode" : 3001,
                        "errorMessage" : "유효한 인증 토큰이 아닙니다"
                      }
                    }
components:
  schemas:
    '[request] register-review':
      title: "[request] register-review"
      required:
      - review
      - score
      type: object
      properties:
        score:
          description: 점수 (0.5 이상 5.0 이하)
          oneOf:
          - type: number
          - null
        review:
          description: 리뷰 (10자 이상 20자 이하)
          oneOf:
          - type: string
          - null
    '[request] update-product':
      title: "[request] update-product"
      type: object
      properties:
        productOption:
          type: array
          description: 상품 옵션
          nullable: true
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        descriptionImgUrl:
          type: string
          description: 상품 설명 이미지 (50자 이하)
          nullable: true
        productImgUrl:
          type: string
          description: 상품 이미지 (50자 이하)
          nullable: true
        keywords:
          type: array
          description: 상품 키워드
          nullable: true
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        price:
          type: number
          description: 상품 금액
          nullable: true
        productName:
          type: string
          description: 상품명 (50자 이하)
          nullable: true
    '[response] delete-product':
      title: "[response] delete-product"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - result
          type: object
          properties:
            result:
              type: boolean
              description: 삭제 결과
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[request] register-product':
      title: "[request] register-product"
      required:
      - category
      - descriptionImgUrl
      - price
      - productImgUrl
      - productName
      - quantity
      type: object
      properties:
        quantity:
          type: number
          description: 상품 수량 (20 이상)
        productImgUrl:
          description: 상품 이미지 (50자 이하)
          oneOf:
          - type: string
          - null
        descriptionImgUrl:
          description: 상품 설명 이미지 (50자 이하)
          oneOf:
          - type: string
          - null
        price:
          type: number
          description: 상품 금액
        category:
          description: "카테고리 (ELECTRONICS, FASHION, DIGITAL, HOME_APPLIANCES, BEAUTY,\
            \ BOOKS, SPORTS, FOOD, TOYS, FURNITURE, AUTOMOTIVE, HEALTH, TOTAL)"
          oneOf:
          - null
          - type: string
        productName:
          description: 상품명 (50자 이하)
          oneOf:
          - type: string
          - null
    '[request] increase-product-quantity':
      title: "[request] increase-product-quantity"
      required:
      - quantity
      type: object
      properties:
        quantity:
          type: number
          description: 상품수량 (1 이상)
    '[response] update-product-quantity':
      title: "[response] update-product-quantity"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - result
          type: object
          properties:
            result:
              type: boolean
              description: 수정 결과
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] find-product-list':
      title: "[response] find-product-list"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - page
          - productCount
          - productList
          - size
          type: object
          properties:
            size:
              type: number
              description: 조회 사이즈
            page:
              type: number
              description: 조회 페이지
            productCount:
              type: number
              description: 조회된 상품 수
            productList:
              type: array
              description: 상품 리스트
              items:
                required:
                - id
                - price
                - productImgUrl
                - productName
                - sellerEmail
                type: object
                properties:
                  productImgUrl:
                    type: string
                    description: 상품 이미지 주소
                  price:
                    type: number
                    description: 상품 가격
                  id:
                    type: number
                    description: 상품 아이디
                  sellerEmail:
                    type: string
                    description: 판매자 이메일
                  productName:
                    type: string
                    description: 상품명
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] error':
      title: "[response] error"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - errorCode
          - errorMessage
          type: object
          properties:
            errorMessage:
              type: string
              description: 에러 메시지
            errorCode:
              type: number
              description: 에러 코드
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] update-product':
      title: "[response] update-product"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - category
          - descriptionImgUrl
          - keywords
          - price
          - productId
          - productImgUrl
          - productName
          - sellerEmail
          type: object
          properties:
            descriptionImgUrl:
              type: string
              description: 상품 설명 이미지 URL
            productImgUrl:
              type: string
              description: 상품 이미지 URL
            keywords:
              type: array
              description: 상품 키워드
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            productId:
              type: number
              description: 수정된 상품 ID
            price:
              type: number
              description: 상품 가격
            category:
              type: string
              description: 상품 카테고리
            sellerEmail:
              type: string
              description: 판매자 이메일
            productName:
              type: string
              description: 상품명
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] register-review':
      title: "[response] register-review"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - result
          type: object
          properties:
            result:
              type: boolean
              description: 성공 여부
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] find-product':
      title: "[response] find-product"
      required:
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - category
          - descriptionImgUrl
          - keywords
          - price
          - productId
          - productImgUrl
          - productName
          - quantity
          - regDateTime
          - sellerEmail
          type: object
          properties:
            regDateTime:
              type: string
              description: 등록 일시
            descriptionImgUrl:
              type: string
              description: 설명 이미지 URL
            productImgUrl:
              type: string
              description: 상품 이미지 URL
            quantity:
              type: number
              description: 수량
            keywords:
              type: array
              description: 키워드 목록
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            productId:
              type: number
              description: 상품 ID
            price:
              type: number
              description: 가격
            category:
              type: string
              description: 카테고리
            sellerEmail:
              type: string
              description: 판매자 이메일
            productName:
              type: string
              description: 상품 이름
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] register-product':
      title: "[response] register-product"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - category
          - descriptionImgUrl
          - keywords
          - price
          - productId
          - productImgUrl
          - productName
          - quantity
          - sellerEmail
          type: object
          properties:
            quantity:
              type: number
              description: 상품 수량
            descriptionImgUrl:
              type: string
              description: 상품 설명 이미지
            productImgUrl:
              type: string
              description: 상품 이미지
            keywords:
              type: array
              description: 상품 키워드
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            productId:
              type: number
              description: 상품 코드
            price:
              type: number
              description: 상품 금액
            category:
              type: string
              description: 상품 카테고리
            sellerEmail:
              type: string
              description: 판매자 이메일
            productName:
              type: string
              description: 판매자명
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] find-review-list':
      title: "[response] find-review-list"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - page
          - productId
          - reviewCount
          - reviews
          - size
          type: object
          properties:
            reviews:
              type: array
              description: 리뷰 목록
              items:
                required:
                - customerEmail
                - review
                type: object
                properties:
                  review:
                    type: string
                    description: 리뷰 내용
                  customerEmail:
                    type: string
                    description: 리뷰 작성자
            size:
              type: number
              description: 조회 사이즈
            productId:
              type: number
              description: 상품 ID
            reviewCount:
              type: number
              description: 조회된 리뷰 수
            page:
              type: number
              description: 조회 페이지
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지
    '[response] find-recommend-product':
      title: "[response] find-recommend-product"
      required:
      - data
      - httpStatus
      - message
      type: object
      properties:
        data:
          required:
          - personallyList
          - popularList
          - trendList
          type: object
          properties:
            trendList:
              type: array
              description: 트랜드 분석 기반 추천 상품
              items:
                required:
                - price
                - productId
                - productImgUrl
                - productName
                - sellerEmail
                type: object
                properties:
                  productImgUrl:
                    type: string
                    description: 상품 이미지 주소
                  productId:
                    type: number
                    description: 상품 아이디
                  price:
                    type: number
                    description: 상품 가격
                  sellerEmail:
                    type: string
                    description: 판매자 이메일
                  productName:
                    type: string
                    description: 상품명
            popularList:
              type: array
              description: 최다 판매 상품
              items:
                required:
                - price
                - productId
                - productImgUrl
                - productName
                - sellerEmail
                type: object
                properties:
                  productImgUrl:
                    type: string
                    description: 상품 이미지 주소
                  productId:
                    type: number
                    description: 상품 아이디
                  price:
                    type: number
                    description: 상품 가격
                  sellerEmail:
                    type: string
                    description: 판매자 이메일
                  productName:
                    type: string
                    description: 상품명
            personallyList:
              type: array
              description: 사용자 구매 데이터 기반 추천 상품
              items:
                required:
                - price
                - productId
                - productImgUrl
                - productName
                - sellerEmail
                type: object
                properties:
                  productImgUrl:
                    type: string
                    description: 상품 이미지 주소
                  productId:
                    type: number
                    description: 상품 아이디
                  price:
                    type: number
                    description: 상품 가격
                  sellerEmail:
                    type: string
                    description: 판매자 이메일
                  productName:
                    type: string
                    description: 상품명
          description: 응답 데이터
        httpStatus:
          type: number
          description: 상태 코드
        message:
          type: string
          description: 상태 메시지

  securitySchemes:
    APIKey:
      type: apiKey
      name: Authorization
      in: header
security:
  - APIKey: []