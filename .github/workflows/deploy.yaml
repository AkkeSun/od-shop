name: od-shop

on:
  push:
    branches:
      - master
    paths:
      - 'account/**'

jobs:
  ################### module check ###################
  module-check:
    runs-on: ubuntu-latest
    outputs:
      account_api_changed: ${{ steps.check-account.outputs.changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check Account API Changes
        id: check-account
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q '^account/'; then
            echo "changed=true" >> $GITHUB_OUTPUT  
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

  ################### [CI] account-api ###################
  ci-account-api:
    needs: module-check
    if: needs.module-check.outputs.account_api_changed == 'true'
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set-tag.outputs.image_tag }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Build Account API
        run: |
          cd account
          ./gradlew clean build -Pprofile=prod -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set Image Tag
        id: set-tag
        run: |
          IMAGE_TAG=$(TZ=Asia/Seoul date +'%Y%m%d%H%M')
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT   # CD job으로 전달용

      - name: Build and Push Docker Image
        run: |
          cd account
          docker buildx build --platform linux/arm64 -t akkessun/account-api:$IMAGE_TAG . --push

  ################### [CD] account-api ###################
  cd-account-api:
    runs-on: ubuntu-latest
    needs: ci-account-api
    if: needs.module-check.outputs.account_api_changed == 'true'
    steps:
      - name: Deploy Account API (Docker)
        env:
          IP: ${{ secrets.PROD_01_IP }}
          PORT: ${{ secrets.PROD_01_PORT }}
          USERNAME: ${{ secrets.PROD_USERNAME }}
          PASSWORD: ${{ secrets.PROD_PASSWORD }}
          IMAGE_TAG: ${{ needs.ci-account-api.outputs.image_tag }}
          IMAGE_NAME: akkessun/account-api
        run: |
          echo ">>> Pulling Docker image..."
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -p "$PORT" "$USERNAME@$IP" \
            "docker pull ${IMAGE_NAME}:${IMAGE_TAG}"
          
          echo ">>> Stopping old container..."
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -p "$PORT" "$USERNAME@$IP" \
            "docker stop account-api || true && docker rm account-api || true"
          
          echo ">>> Removing old images..."
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -p "$PORT" "$USERNAME@$IP" \
            "docker images ${IMAGE_NAME} --format '{{.Repository}}:{{.Tag}}' | grep -v '${IMAGE_TAG}' | xargs -r docker rmi -f"
          
          echo ">>> Starting new container..."
          sshpass -p "$PASSWORD" ssh -o StrictHostKeyChecking=no -p "$PORT" "$USERNAME@$IP" \
            "docker run -d --name account-api -p 8081:8080 ${IMAGE_NAME}:${IMAGE_TAG}"